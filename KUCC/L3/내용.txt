1. Traditional CV ? (SIFT, SURF, BRIEF, ORB)

위에서, 고정된 필터로 feature extraction 하는거 보여주면 좋을듯

2. calculation 
 - kernel(filter = weight 역할) 개수, 사이즈  - dense 와 마찬가지로, activation 없으면 스킵함
 - stride 
 - padding

 * kernel 을 고정시키는 방법은 tf.nn.conv2d 를 이용하면 된다. - 강제학습/class 이용할 경우

3. why?
 - fully connected (Dense) 의 경우 weight 가 너무 많다!
 - locally connected 의 경우 weight 가 줄기는 하지만 각 필터는 그림을 쪼개서 보기 때문에 좋지 않다.
 - CNN - weight 도 매우 적고 하나의 필터가 그림 전체를 보니까 각 filter 마다 다른 feature 를 뽑아낸다.

4. bias-variance tradeoff
 - BN / dropout
 - pooling

5. Useful things
 - applications
 - opencv (cv2)
 - imagenet benchmark, datasets(MNIST, CIFAR10, COCO, VOC, ...)
 - tf.keras.preprocessing.image

6. exercise
 - simple mnist - https://keras.io/examples/vision/mnist_convnet/
 - augmentation 들어간거

7. HW
 - d2l : 


