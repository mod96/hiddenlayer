1. CIFAR-10 에서 InceptionV3, callbacks, validation_data 옵션을 사용해보기
	|- 모든 epoch 를 돌려볼 필요는 없습니다. 다만, 코드가 돌아가는 것은 확인하기 위해 적어도 1번의 epoch 를 돌려야 합니다.
	|- 1번 코드블럭에는 import 할 것들을 몰아서 작성해주세요
	|- 2번 코드블럭에는 global variable 들을 넣어주세요 (batch_size, epochs 등등) - 사용하지 않을 경우 skip (실재로 global variable 은 권장되지 않습니다.)
	|- 3번 코드블럭에는 사용하는 모든 함수, 클라스 등을 넣어주세요. 함수명은 그 함수가 어떤 작업을 하는지 모르는 사람이 봐도 알아보도록 작성해주세요.
	|- 4번 코드블럭에는 if __name__ = '__main__': 방식으로 실재 실행할 코드를 작성해주세요.
	|- comment due : 10/2(금)
	|- 최종본은 pdf 로 변환해주세요.

2. EMNIST mixed 에서 accuracy 높이기 (data/train.csv)
	|- Introduction
		|- 컴퓨터 비전은 가장 빠르게 발전하는 인공 지능 분야 중 하나로 학계, 산업계에서 많은 연구가 이루어지고 있습니다.
		|- 손글씨 이미지인 MNIST 데이터 세트는 이 분야의 고전적인 문제로 잘 알려져 있는데, MNIST 변형 데이터 세트를 제공드립니다.
		|- 문자로 된 손글씨에 숫자를 숨겨놨습니다. 어떤 숫자인지 맞추는 모델을 만들어주세요!
	|- About Data
		|- EMNIST 는 모델이 얼마나 잘 학습하는지(이를테면 얼마나 robust 한지) 검증하고자 하는 데이터 중 하나입니다.
		|- EMNIST 는 MNIST 에서 조금 수정을 한 데이터라고 합니다.
		|- 데이터는 첨부해드린 sample form 처럼 얻는다고 합니다.
		|- 참고할만한 자료들 또한 첨부해드렸습니다.
	|- Rules / tips
		|- train : validation 비율을 9 : 1 로 놓았을 때, val_accuracy 가 0.90 을 넘는 모델을 작성해주세요.
		|- 모델은 end-to-end 로 작성하셔서 (None, 10) 으로 뽑아 바로 val_accuracy 를 출력하게 하시는 것을 권장합니다.
		|- end-to-end 모델이 아닐 경우 validation 에서 accuracy 를 따로 측정하셔야 합니다.
		|- 세션 때 .fit 옵션 중 validation_data 를 사용했는데, 사실 validation_split = (비율) 로 하셔도 됩니다.
		|- 다만 validation_split = (비율) 을 ImageDataGenerator 와 함께 사용하시면 안됩니다. (왜 그럴까요?)
		|- ImageDataGenerator 를 사용하지 않고도 accuracy 를 높일 수 있기는 하지만, 경험을 위해 사용하시는 것을 추천드립니다.
	|- Submission
		|- 1번 코드블럭에는 import 할 것들을 몰아서 작성해주세요
		|- 2번 코드블럭에는 global variable 들을 넣어주세요 (batch_size, epochs 등등) - 사용하지 않을 경우 skip (실재로 global variable 은 권장되지 않습니다.)
		|- 3번 코드블럭에는 사용하는 모든 함수, 클라스 등을 넣어주세요. 함수명은 그 함수가 어떤 작업을 하는지 모르는 사람이 봐도 알아보도록 작성해주세요.
		|- 4번 코드블럭에는 if __name__ = '__main__': 방식으로 실재 실행할 코드를 작성해주세요.
	|- comment due : 10/16(금)
	|- 최종본은 pdf 로 변환해주세요.